@model IEnumerable<task_management.Models.Project>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Projects</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.0.0/dist/tailwind.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>

<body class="bg-gray-100 text-gray-900">
    <div class="flex h-screen">
        <!-- Sidebar -->
        <div>
            @Html.Partial("_SidebarPartial")
        </div>

        <!-- Main Content -->
        <div class="flex-1 container mx-auto p-10 overflow-y-auto">
            <h2 class="text-3xl font-bold mb-6">Projects</h2>

            <!-- Button to Create New Project -->
            <div class="flex justify-end mb-8">
                <a href="@Url.Action("Create", "Project")" class="bg-blue-600 text-white text-lg px-4 py-2 rounded-md shadow-md hover:bg-blue-700 focus:outline-none flex items-center" title="Create New Project">
                    <i class="fas fa-plus-circle text-2xl mr-2"></i>
                    <span class="hidden sm:inline">Create New Project</span>
                </a>
            </div>

            <!-- Projects List -->
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
                @foreach (var project in Model)
                {
                    <div class="bg-white rounded-lg shadow-lg p-6" data-project-id="@project.projectId">
                        <div class="flex items-center mb-2">
                            <h3 class="text-2xl font-semibold">@project.name</h3>

                            <a href="@Url.Action("Details", "Project", new { id = project.projectId })" class="text-blue-600 hover:text-blue-800 ml-4" title="View Details">
                                <i class="fas fa-info-circle"></i>
                            </a>
                            <a href="@Url.Action("Edit", "Project", new { id = project.projectId })" class="text-blue-600 hover:text-blue-800 ml-4 " title="Edit Project">
                                <i class="fas fa-edit"></i>
                            </a>
                            <a style="cursor: pointer;" onclick="removeProject(@project.projectId)"  class="text-blue-600 hover:text-blue-800 ml-4 " title="Remove Project">
                                <i class="fa-solid fa-trash" style="color: #1f70c7;"></i>
                            </a>
                        </div>
                        <p class="mb-2 text-gray-500">
                            <strong>Status:</strong>
                            <span class="inline-block px-2 py-1 rounded-full text-white @(
                                project.status == "Not Started" ? "bg-gray-500" :
                                project.status == "In Progress" ? "bg-blue-500" :
                                project.status == "Completed" ? "bg-green-500" : "bg-gray-300")">
                                @project.status
                            </span>
                        </p>
                        <p class="mb-2 text-gray-700"><strong>Start Date:</strong> @project.startDate.ToShortDateString()</p>
                    </div>
                }
            </div>
        </div>
    </div>
</body>
</html>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    async function removeProject(projectId) {
        const confirmResult = await Swal.fire({
            title: 'Are you sure?',
            text: "Do you want to delete this project? This action cannot be undone.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        });

        if (confirmResult.isConfirmed) {
            try {
                const response = await fetch(`/Project/Remove?projectId=${projectId}`, {
                    method: 'PUT'
                });

                if (response.ok) {
                    const result = await response.json();
                    if (result.success) {
                        // Remove the project row from the DOM
                        const projectRow = document.querySelector(`[data-project-id="${projectId}"]`);
                        if (projectRow) {
                            projectRow.remove();
                        }

                        await Swal.fire({
                            title: 'Deleted!',
                            text: 'Your project has been deleted.',
                            icon: 'success',
                            timer: 2000,
                            showConfirmButton: false
                        });
                    } else {
                        Swal.fire('Error', result.message || "Failed to delete the project.", 'error');
                    }
                } else {
                    Swal.fire('Error', "Something went wrong while deleting the project.", 'error');
                }
            } catch (error) {
                console.error("Error:", error);
                Swal.fire('Error', "An unexpected error occurred.", 'error');
            }
        }
    }


</script>
